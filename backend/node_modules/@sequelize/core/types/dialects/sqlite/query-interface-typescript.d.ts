import type { Sequelize } from '../../sequelize';
import type { TableNameOrModel } from '../abstract/query-generator-typescript';
import { AbstractQueryInterface } from '../abstract/query-interface';
import type { AddConstraintOptions, ConstraintDescription, QiDropAllTablesOptions, RemoveConstraintOptions, ShowConstraintsOptions } from '../abstract/query-interface.types';
import type { SqliteQueryGenerator } from './query-generator';
/**
 * Temporary class to ease the TypeScript migration
 */
export declare class SqliteQueryInterfaceTypeScript extends AbstractQueryInterface {
    readonly sequelize: Sequelize;
    readonly queryGenerator: SqliteQueryGenerator;
    constructor(sequelize: Sequelize, queryGenerator: SqliteQueryGenerator);
    /**
     * Drop all tables
     *
     * @param options
     */
    dropAllTables(options?: QiDropAllTablesOptions): Promise<void>;
    addConstraint(tableName: TableNameOrModel, options: AddConstraintOptions): Promise<void>;
    removeConstraint(tableName: TableNameOrModel, constraintName: string, options?: RemoveConstraintOptions): Promise<void>;
    showConstraints(tableName: TableNameOrModel, options?: ShowConstraintsOptions): Promise<ConstraintDescription[]>;
}
