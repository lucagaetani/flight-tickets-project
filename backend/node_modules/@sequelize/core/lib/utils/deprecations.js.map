{
  "version": 3,
  "sources": ["../../src/utils/deprecations.ts"],
  "sourcesContent": ["import { deprecate } from 'node:util';\n\nconst noop = () => { /* noop */ };\n\nexport const noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');\nexport const noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');\nexport const unsupportedEngine = deprecate(noop, 'This database engine version is not supported, please update your database server. More information https://sequelize.org/releases/', 'SEQUELIZE0006');\nexport const useErrorCause = deprecate(noop, 'The \"parent\" and \"original\" properties in Sequelize errors have been replaced with the native \"cause\" property. Use that one instead.', 'SEQUELIZE0007');\nexport const scopeRenamedToWithScope = deprecate(noop, 'Model.scope has been renamed to Model.withScope, and Model.unscoped has been renamed to Model.withoutScope', 'SEQUELIZE0008');\nexport const schemaRenamedToWithSchema = deprecate(noop, 'Model.schema has been renamed to Model.withSchema', 'SEQUELIZE0009');\nexport const noSequelizeDataType = deprecate(noop, `Accessing DataTypes on the Sequelize constructor is deprecated. Use the DataTypes object instead.\ne.g, instead of using Sequelize.STRING, use DataTypes.STRING`, 'SEQUELIZE0010');\nexport const noModelDropSchema = deprecate(noop, 'Do not use Model.dropSchema. Use Sequelize#dropSchema or QueryInterface#dropSchema instead', 'SEQUELIZE0011');\nexport const movedSequelizeParam = deprecate(noop, 'The \"sequelize\" instance has been moved from the second parameter bag to the first parameter bag in \"beforeAssociate\" and \"afterAssociate\" hooks', 'SEQUELIZE0012');\nexport const hooksReworked = deprecate(noop, 'Sequelize Hooks methods, such as addHook, runHooks, beforeFind, and afterSync\u2026 are deprecated in favor of using the methods available through \"sequelize.hooks\", \"Sequelize.hooks\" and \"YourModel.hooks\".', 'SEQUELIZE0013');\nexport const doNotUseRealDataType = deprecate(noop, 'Sequelize 7 has normalized its FLOAT & DOUBLE data types, and made REAL redundant. FLOAT is now always an IEEE-754 single precision floating point, and DOUBLE a double-precision one. Use either instead of REAL.', 'SEQUELIZE0014');\nexport const noSchemaParameter = deprecate(noop, 'The schema parameter in QueryInterface#describeTable has been deprecated, use a TableNameWithSchema object to specify the schema or set the schema globally in the options.', 'SEQUELIZE0015');\nexport const noSchemaDelimiterParameter = deprecate(noop, 'The schemaDelimiter parameter in QueryInterface#describeTable has been deprecated, use a TableNameWithSchema object to specify the schemaDelimiter.', 'SEQUELIZE0016');\nexport const columnToAttribute = deprecate(noop, 'The @Column decorator has been renamed to @Attribute.', 'SEQUELIZE0017');\nexport const fieldToColumn = deprecate(noop, 'The \"field\" option in attribute definitions has been renamed to \"columnName\".', 'SEQUELIZE0018');\nexport const noModelTableName = deprecate(noop, 'Model.tableName has been replaced with the more complete Model.modelDefinition.table, or Model.table', 'SEQUELIZE0019');\nexport const noNewModel = deprecate(noop, `Do not use \"new YourModel()\" to instantiate a model. Use \"YourModel.build()\" instead. The previous option is being removed to resolve a conflict with class properties. See https://github.com/sequelize/sequelize/issues/14300#issuecomment-1355188077 for more information.`, 'SEQUELIZE0020');\nexport const noOpCol = deprecate(noop, 'Do not use Op.col, use col(), attribute(), or identifier() instead. Read more about these in the Raw Queries guide in the sequelize docs.', 'SEQUELIZE0021');\nexport const noSqlJson = deprecate(noop, 'The json() function used to generate JSON queries is deprecated. All of its features are available through where(), attribute() or jsonPath(). Some of its features have been removed but can be replicated using the \"sql\" tag. See our Sequelize 7 upgrade guide.', 'SEQUELIZE0022');\nexport const alwaysQuoteIdentifiers = deprecate(noop, 'Setting \"quoteIdentifiers\" to false is unsafe and it will be removed in v8.', 'SEQUELIZE0023');\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0B;AAE1B,MAAM,OAAO,MAAM;AAAa;AAEzB,MAAM,oBAAgB,4BAAU,MAAM,iFAAiF,eAAe;AACtI,MAAM,0BAAsB,4BAAU,MAAM,6FAA6F,eAAe;AACxJ,MAAM,wBAAoB,4BAAU,MAAM,uIAAuI,eAAe;AAChM,MAAM,oBAAgB,4BAAU,MAAM,yIAAyI,eAAe;AAC9L,MAAM,8BAA0B,4BAAU,MAAM,8GAA8G,eAAe;AAC7K,MAAM,gCAA4B,4BAAU,MAAM,qDAAqD,eAAe;AACtH,MAAM,0BAAsB,4BAAU,MAAM;AAAA,+DACY,eAAe;AACvE,MAAM,wBAAoB,4BAAU,MAAM,8FAA8F,eAAe;AACvJ,MAAM,0BAAsB,4BAAU,MAAM,oJAAoJ,eAAe;AAC/M,MAAM,oBAAgB,4BAAU,MAAM,kNAA6M,eAAe;AAClQ,MAAM,2BAAuB,4BAAU,MAAM,sNAAsN,eAAe;AAClR,MAAM,wBAAoB,4BAAU,MAAM,+KAA+K,eAAe;AACxO,MAAM,iCAA6B,4BAAU,MAAM,uJAAuJ,eAAe;AACzN,MAAM,wBAAoB,4BAAU,MAAM,yDAAyD,eAAe;AAClH,MAAM,oBAAgB,4BAAU,MAAM,iFAAiF,eAAe;AACtI,MAAM,uBAAmB,4BAAU,MAAM,wGAAwG,eAAe;AAChK,MAAM,iBAAa,4BAAU,MAAM,iRAAiR,eAAe;AACnU,MAAM,cAAU,4BAAU,MAAM,6IAA6I,eAAe;AAC5L,MAAM,gBAAY,4BAAU,MAAM,uQAAuQ,eAAe;AACxT,MAAM,6BAAyB,4BAAU,MAAM,+EAA+E,eAAe;",
  "names": []
}
