{
  "version": 3,
  "sources": ["../../src/utils/multimap.ts"],
  "sourcesContent": ["export class Multimap<K, V> {\n  #internalMap = new Map<K, V[]>();\n\n  clear() {\n    this.#internalMap.clear();\n  }\n\n  append(key: K, value: V): this {\n    const valueSet = this.#internalMap.get(key);\n    if (valueSet != null) {\n      valueSet.push(value);\n\n      return this;\n    }\n\n    this.#internalMap.set(key, [value]);\n\n    return this;\n  }\n\n  delete(key: K, value: V): boolean {\n    const valueSet = this.#internalMap.get(key);\n    if (valueSet == null) {\n      return false;\n    }\n\n    const index = valueSet.indexOf(value);\n    if (index === -1) {\n      return false;\n    }\n\n    valueSet.splice(index, 1);\n\n    return true;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.#internalMap.keys();\n  }\n\n  getAll(key: K): V[] {\n    const values = this.#internalMap.get(key);\n\n    if (values) {\n      return [...values];\n    }\n\n    return [];\n  }\n\n  count(key: K): number {\n    const values = this.#internalMap.get(key);\n\n    return values?.length ?? 0;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,SAAe;AAAA,EAC1B,eAAe,oBAAI,IAAY;AAAA,EAE/B,QAAQ;AACN,SAAK,aAAa,MAAM;AAAA,EAC1B;AAAA,EAEA,OAAO,KAAQ,OAAgB;AAC7B,UAAM,WAAW,KAAK,aAAa,IAAI,GAAG;AAC1C,QAAI,YAAY,MAAM;AACpB,eAAS,KAAK,KAAK;AAEnB,aAAO;AAAA,IACT;AAEA,SAAK,aAAa,IAAI,KAAK,CAAC,KAAK,CAAC;AAElC,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,KAAQ,OAAmB;AAChC,UAAM,WAAW,KAAK,aAAa,IAAI,GAAG;AAC1C,QAAI,YAAY,MAAM;AACpB,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,SAAS,QAAQ,KAAK;AACpC,QAAI,UAAU,IAAI;AAChB,aAAO;AAAA,IACT;AAEA,aAAS,OAAO,OAAO,CAAC;AAExB,WAAO;AAAA,EACT;AAAA,EAEA,OAA4B;AAC1B,WAAO,KAAK,aAAa,KAAK;AAAA,EAChC;AAAA,EAEA,OAAO,KAAa;AAClB,UAAM,SAAS,KAAK,aAAa,IAAI,GAAG;AAExC,QAAI,QAAQ;AACV,aAAO,CAAC,GAAG,MAAM;AAAA,IACnB;AAEA,WAAO,CAAC;AAAA,EACV;AAAA,EAEA,MAAM,KAAgB;AACpB,UAAM,SAAS,KAAK,aAAa,IAAI,GAAG;AAExC,YAAO,iCAAQ,WAAU;AAAA,EAC3B;AACF;",
  "names": []
}
