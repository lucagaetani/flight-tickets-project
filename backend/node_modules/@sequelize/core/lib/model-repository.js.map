{
  "version": 3,
  "sources": ["../src/model-repository.ts"],
  "sourcesContent": ["import type { ModelDefinition } from './model-definition.js';\nimport type { ModelTypeScript } from './model-typescript.js';\nimport type { Sequelize } from './sequelize.js';\n\n/**\n * The goal of this class is to become the new home of all the static methods that are currently present on the Model class,\n * as a way to enable a true Repository Mode for Sequelize.\n *\n * Currently this class is not usable as a repository (due to having a dependency on ModelStatic), but as we migrate all of\n * Model to this class, we will be able to remove the dependency on ModelStatic, and make this class usable as a repository.\n *\n * See https://github.com/sequelize/sequelize/issues/15389 for more details.\n *\n * Unlike {@link ModelDefinition}, it's possible to have multiple different repositories for the same model (as users can provide their own implementation).\n */\nclass ModelRepository {\n  readonly #modelDefinition: ModelDefinition;\n  readonly #sequelize: Sequelize;\n\n  constructor(modelDefinition: ModelDefinition, sequelize: Sequelize) {\n    this.#modelDefinition = modelDefinition;\n    this.#sequelize = sequelize;\n  }\n}\n\nconst modelRepositories = new WeakMap<typeof ModelTypeScript, ModelRepository>();\n\nexport function getModelRepository(model: typeof ModelTypeScript): ModelRepository {\n  let internals = modelRepositories.get(model);\n  if (internals) {\n    return internals;\n  }\n\n  // @ts-expect-error -- temporary ts-ignore until we can drop ModelTypeScript\n  internals = new ModelRepository(model);\n\n  return internals;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,MAAM,gBAAgB;AAAA,EACX;AAAA,EACA;AAAA,EAET,YAAY,iBAAkC,WAAsB;AAClE,SAAK,mBAAmB;AACxB,SAAK,aAAa;AAAA,EACpB;AACF;AAEA,MAAM,oBAAoB,oBAAI,QAAiD;AAExE,SAAS,mBAAmB,OAAgD;AACjF,MAAI,YAAY,kBAAkB,IAAI,KAAK;AAC3C,MAAI,WAAW;AACb,WAAO;AAAA,EACT;AAGA,cAAY,IAAI,gBAAgB,KAAK;AAErC,SAAO;AACT;",
  "names": []
}
