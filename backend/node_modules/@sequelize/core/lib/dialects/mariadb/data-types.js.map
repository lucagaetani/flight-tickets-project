{
  "version": 3,
  "sources": ["../../../src/dialects/mariadb/data-types.ts"],
  "sourcesContent": ["import dayjs from 'dayjs';\nimport wkx from 'wkx';\nimport type { Falsy } from '../../generic/falsy.js';\nimport type { GeoJson } from '../../geo-json.js';\nimport { isString } from '../../utils/check.js';\nimport { isValidTimeZone } from '../../utils/dayjs';\nimport * as BaseTypes from '../abstract/data-types.js';\nimport type { AcceptedDate, BindParamOptions } from '../abstract/data-types.js';\n\nexport class FLOAT extends BaseTypes.FLOAT {\n  protected getNumberSqlTypeName(): string {\n    return 'FLOAT';\n  }\n}\n\nexport class BOOLEAN extends BaseTypes.BOOLEAN {\n  toSql() {\n    return 'TINYINT(1)';\n  }\n\n  toBindableValue(value: boolean | Falsy): unknown {\n    // when binding, must be an integer\n    return value ? 1 : 0;\n  }\n}\n\nexport class DATE extends BaseTypes.DATE {\n  toBindableValue(date: AcceptedDate) {\n    date = this._applyTimezone(date);\n\n    // MariaDB datetime precision defaults to 0\n    const precision = this.options.precision ?? 0;\n    let format = 'YYYY-MM-DD HH:mm:ss';\n    // TODO: We should normally use `S`, `SS` or `SSS` based on the precision, but\n    //  dayjs has a bug which causes `S` and `SS` to be ignored:\n    //  https://github.com/iamkun/dayjs/issues/1734\n    if (precision > 0) {\n      format += `.SSS`;\n    }\n\n    return date.format(format);\n  }\n\n  sanitize(value: unknown, options?: { timezone?: string }): unknown {\n    if (isString(value) && options?.timezone) {\n      if (isValidTimeZone(options.timezone)) {\n        return dayjs.tz(value, options.timezone).toDate();\n      }\n\n      return new Date(`${value} ${options.timezone}`);\n    }\n\n    return super.sanitize(value);\n  }\n}\n\nexport class UUID extends BaseTypes.UUID {\n  // TODO: add check constraint to enforce GUID format\n  toSql() {\n    return 'CHAR(36) BINARY';\n  }\n}\n\nexport class GEOMETRY extends BaseTypes.GEOMETRY {\n  toBindableValue(value: GeoJson) {\n    const srid = this.options.srid ? `, ${this.options.srid}` : '';\n\n    return `ST_GeomFromText(${this._getDialect().escapeString(\n      wkx.Geometry.parseGeoJSON(value).toWkt(),\n    )}${srid})`;\n  }\n\n  getBindParamSql(value: GeoJson, options: BindParamOptions) {\n    const srid = this.options.srid ? `, ${options.bindParam(this.options.srid)}` : '';\n\n    return `ST_GeomFromText(${options.bindParam(\n      wkx.Geometry.parseGeoJSON(value).toWkt(),\n    )}${srid})`;\n  }\n\n  toSql() {\n    const sql = this.options.type?.toUpperCase() || 'GEOMETRY';\n\n    if (this.options.srid) {\n      return `${sql} REF_SYSTEM_ID=${this.options.srid}`;\n    }\n\n    return sql;\n  }\n}\n\nexport class ENUM<Member extends string> extends BaseTypes.ENUM<Member> {\n  toSql() {\n    const dialect = this._getDialect();\n\n    return `ENUM(${this.options.values.map(value => dialect.escapeString(value)).join(', ')})`;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,iBAAgB;AAGhB,mBAAyB;AACzB,IAAAA,gBAAgC;AAChC,gBAA2B;AAGpB,MAAM,cAAc,UAAU,MAAM;AAAA,EAC/B,uBAA+B;AACvC,WAAO;AAAA,EACT;AACF;AAEO,MAAM,gBAAgB,UAAU,QAAQ;AAAA,EAC7C,QAAQ;AACN,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB,OAAiC;AAE/C,WAAO,QAAQ,IAAI;AAAA,EACrB;AACF;AAEO,MAAM,aAAa,UAAU,KAAK;AAAA,EACvC,gBAAgB,MAAoB;AAClC,WAAO,KAAK,eAAe,IAAI;AAG/B,UAAM,YAAY,KAAK,QAAQ,aAAa;AAC5C,QAAI,SAAS;AAIb,QAAI,YAAY,GAAG;AACjB,gBAAU;AAAA,IACZ;AAEA,WAAO,KAAK,OAAO,MAAM;AAAA,EAC3B;AAAA,EAEA,SAAS,OAAgB,SAA0C;AACjE,YAAI,uBAAS,KAAK,MAAK,mCAAS,WAAU;AACxC,cAAI,+BAAgB,QAAQ,QAAQ,GAAG;AACrC,eAAO,aAAAC,QAAM,GAAG,OAAO,QAAQ,QAAQ,EAAE,OAAO;AAAA,MAClD;AAEA,aAAO,oBAAI,KAAK,GAAG,SAAS,QAAQ,UAAU;AAAA,IAChD;AAEA,WAAO,MAAM,SAAS,KAAK;AAAA,EAC7B;AACF;AAEO,MAAM,aAAa,UAAU,KAAK;AAAA;AAAA,EAEvC,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAEO,MAAM,iBAAiB,UAAU,SAAS;AAAA,EAC/C,gBAAgB,OAAgB;AAC9B,UAAM,OAAO,KAAK,QAAQ,OAAO,KAAK,KAAK,QAAQ,SAAS;AAE5D,WAAO,mBAAmB,KAAK,YAAY,EAAE;AAAA,MAC3C,WAAAC,QAAI,SAAS,aAAa,KAAK,EAAE,MAAM;AAAA,IACzC,IAAI;AAAA,EACN;AAAA,EAEA,gBAAgB,OAAgB,SAA2B;AACzD,UAAM,OAAO,KAAK,QAAQ,OAAO,KAAK,QAAQ,UAAU,KAAK,QAAQ,IAAI,MAAM;AAE/E,WAAO,mBAAmB,QAAQ;AAAA,MAChC,WAAAA,QAAI,SAAS,aAAa,KAAK,EAAE,MAAM;AAAA,IACzC,IAAI;AAAA,EACN;AAAA,EAEA,QAAQ;AAhFV;AAiFI,UAAM,QAAM,UAAK,QAAQ,SAAb,mBAAmB,kBAAiB;AAEhD,QAAI,KAAK,QAAQ,MAAM;AACrB,aAAO,GAAG,qBAAqB,KAAK,QAAQ;AAAA,IAC9C;AAEA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,aAAoC,UAAU,KAAa;AAAA,EACtE,QAAQ;AACN,UAAM,UAAU,KAAK,YAAY;AAEjC,WAAO,QAAQ,KAAK,QAAQ,OAAO,IAAI,WAAS,QAAQ,aAAa,KAAK,CAAC,EAAE,KAAK,IAAI;AAAA,EACxF;AACF;",
  "names": ["import_dayjs", "dayjs", "wkx"]
}
