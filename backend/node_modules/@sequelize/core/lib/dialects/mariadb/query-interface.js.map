{
  "version": 3,
  "sources": ["../../../src/dialects/mariadb/query-interface.js"],
  "sourcesContent": ["'use strict';\n\nimport { getObjectFromMap } from '../../utils/object';\nimport { assertNoReservedBind, combineBinds } from '../../utils/sql';\n\nconst { AbstractQueryInterface } = require('../abstract/query-interface');\nconst { QueryTypes } = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk with MariaDB database\n */\nexport class MariaDbQueryInterface extends AbstractQueryInterface {\n  /**\n   * A wrapper that fixes MariaDb's inability to cleanly remove columns from existing tables if they have a foreign key constraint.\n   *\n   * @override\n   */\n  async removeColumn(tableName, columnName, options) {\n    const foreignKeys = await this.showConstraints(tableName, { ...options, columnName, constraintType: 'FOREIGN KEY' });\n    await Promise.all(foreignKeys.map(constraint => this.removeConstraint(tableName, constraint.constraintName, options)));\n\n    await super.removeColumn(tableName, columnName, options);\n  }\n\n  /**\n   * @override\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    if (options.bind) {\n      assertNoReservedBind(options.bind);\n    }\n\n    const modelDefinition = options.model.modelDefinition;\n\n    options = { ...options };\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = Array.from(modelDefinition.primaryKeysAttributeNames, pkAttrName => modelDefinition.getColumnName(pkAttrName));\n\n    const { query, bind } = this.queryGenerator.insertQuery(tableName, insertValues, getObjectFromMap(modelDefinition.attributes), options);\n\n    // unlike bind, replacements are handled by QueryGenerator, not QueryRaw\n    delete options.replacements;\n    options.bind = combineBinds(options.bind, bind);\n\n    return this.sequelize.queryRaw(query, options);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAiC;AACjC,iBAAmD;AAEnD,MAAM,EAAE,uBAAuB,IAAI,QAAQ,6BAA6B;AACxE,MAAM,EAAE,WAAW,IAAI,QAAQ,mBAAmB;AAK3C,MAAM,8BAA8B,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhE,MAAM,aAAa,WAAW,YAAY,SAAS;AACjD,UAAM,cAAc,MAAM,KAAK,gBAAgB,WAAW,EAAE,GAAG,SAAS,YAAY,gBAAgB,cAAc,CAAC;AACnH,UAAM,QAAQ,IAAI,YAAY,IAAI,gBAAc,KAAK,iBAAiB,WAAW,WAAW,gBAAgB,OAAO,CAAC,CAAC;AAErH,UAAM,MAAM,aAAa,WAAW,YAAY,OAAO;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,WAAW,cAAc,cAAc,OAAO,SAAS;AAClE,QAAI,QAAQ,MAAM;AAChB,2CAAqB,QAAQ,IAAI;AAAA,IACnC;AAEA,UAAM,kBAAkB,QAAQ,MAAM;AAEtC,cAAU,EAAE,GAAG,QAAQ;AAEvB,YAAQ,OAAO,WAAW;AAC1B,YAAQ,oBAAoB,OAAO,KAAK,YAAY;AACpD,YAAQ,aAAa,MAAM,KAAK,gBAAgB,2BAA2B,gBAAc,gBAAgB,cAAc,UAAU,CAAC;AAElI,UAAM,EAAE,OAAO,KAAK,IAAI,KAAK,eAAe,YAAY,WAAW,kBAAc,gCAAiB,gBAAgB,UAAU,GAAG,OAAO;AAGtI,WAAO,QAAQ;AACf,YAAQ,WAAO,yBAAa,QAAQ,MAAM,IAAI;AAE9C,WAAO,KAAK,UAAU,SAAS,OAAO,OAAO;AAAA,EAC/C;AACF;",
  "names": []
}
