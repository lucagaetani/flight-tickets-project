{
  "version": 3,
  "sources": ["../../../src/dialects/mariadb/index.ts"],
  "sourcesContent": ["import type { Sequelize } from '../../sequelize.js';\nimport { createUnspecifiedOrderedBindCollector } from '../../utils/sql';\nimport type { SupportableNumericOptions } from '../abstract';\nimport { AbstractDialect } from '../abstract';\nimport { escapeMysqlString } from '../mysql/mysql-utils';\nimport { MariaDbConnectionManager } from './connection-manager';\nimport * as DataTypes from './data-types';\nimport { registerMariaDbDbDataTypeParsers } from './data-types.db.js';\nimport { MariaDbQuery } from './query';\nimport { MariaDbQueryGenerator } from './query-generator';\nimport { MariaDbQueryInterface } from './query-interface';\n\nconst numericOptions: SupportableNumericOptions = {\n  zerofill: true,\n  unsigned: true,\n};\n\nexport class MariaDbDialect extends AbstractDialect {\n  static supports = AbstractDialect.extendSupport(\n    {\n      'VALUES ()': true,\n      'LIMIT ON UPDATE': true,\n      lock: true,\n      forShare: 'LOCK IN SHARE MODE',\n      settingIsolationLevelDuringTransaction: false,\n      schemas: true,\n      inserts: {\n        ignoreDuplicates: ' IGNORE',\n        updateOnDuplicate: ' ON DUPLICATE KEY UPDATE',\n      },\n      index: {\n        collate: false,\n        length: true,\n        parser: true,\n        type: true,\n        using: 1,\n      },\n      constraints: {\n        foreignKeyChecksDisableable: true,\n        removeOptions: { ifExists: true },\n      },\n      indexViaAlter: true,\n      indexHints: true,\n      dataTypes: {\n        COLLATE_BINARY: true,\n        GEOMETRY: true,\n        INTS: numericOptions,\n        FLOAT: { ...numericOptions, scaleAndPrecision: true },\n        REAL: { ...numericOptions, scaleAndPrecision: true },\n        DOUBLE: { ...numericOptions, scaleAndPrecision: true },\n        DECIMAL: numericOptions,\n        JSON: true,\n      },\n      REGEXP: true,\n      jsonOperations: true,\n      jsonExtraction: {\n        unquoted: true,\n        quoted: true,\n      },\n      globalTimeZoneConfig: true,\n      removeColumn: {\n        ifExists: true,\n      },\n    },\n  );\n\n  readonly TICK_CHAR_LEFT = '`';\n  readonly TICK_CHAR_RIGHT = '`';\n  readonly defaultVersion = '10.4.30'; // minimum supported version\n  readonly dataTypesDocumentationUrl = 'https://mariadb.com/kb/en/library/resultset/#field-types';\n\n  readonly queryGenerator: MariaDbQueryGenerator;\n  readonly connectionManager: MariaDbConnectionManager;\n  readonly queryInterface: MariaDbQueryInterface;\n\n  readonly Query = MariaDbQuery;\n\n  constructor(sequelize: Sequelize) {\n    super(sequelize, DataTypes, 'mariadb');\n    this.connectionManager = new MariaDbConnectionManager(this, sequelize);\n    this.queryGenerator = new MariaDbQueryGenerator({\n      dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new MariaDbQueryInterface(\n      sequelize,\n      this.queryGenerator,\n    );\n\n    registerMariaDbDbDataTypeParsers(this);\n  }\n\n  createBindCollector() {\n    return createUnspecifiedOrderedBindCollector();\n  }\n\n  escapeString(value: string) {\n    return escapeMysqlString(value);\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n\n  getDefaultSchema(): string {\n    return this.sequelize.options.database ?? '';\n  }\n\n  static getDefaultPort() {\n    return 3306;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAsD;AAEtD,sBAAgC;AAChC,yBAAkC;AAClC,gCAAyC;AACzC,gBAA2B;AAC3B,2BAAiD;AACjD,mBAA6B;AAC7B,6BAAsC;AACtC,6BAAsC;AAEtC,MAAM,iBAA4C;AAAA,EAChD,UAAU;AAAA,EACV,UAAU;AACZ;AAEO,MAAM,uBAAuB,gCAAgB;AAAA,EAClD,OAAO,WAAW,gCAAgB;AAAA,IAChC;AAAA,MACE,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,wCAAwC;AAAA,MACxC,SAAS;AAAA,MACT,SAAS;AAAA,QACP,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,MACrB;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA,aAAa;AAAA,QACX,6BAA6B;AAAA,QAC7B,eAAe,EAAE,UAAU,KAAK;AAAA,MAClC;AAAA,MACA,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,WAAW;AAAA,QACT,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,QACpD,MAAM,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,QACnD,QAAQ,EAAE,GAAG,gBAAgB,mBAAmB,KAAK;AAAA,QACrD,SAAS;AAAA,QACT,MAAM;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,QACd,UAAU;AAAA,QACV,QAAQ;AAAA,MACV;AAAA,MACA,sBAAsB;AAAA,MACtB,cAAc;AAAA,QACZ,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EAES,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAClB,iBAAiB;AAAA;AAAA,EACjB,4BAA4B;AAAA,EAE5B;AAAA,EACA;AAAA,EACA;AAAA,EAEA,QAAQ;AAAA,EAEjB,YAAY,WAAsB;AAChC,UAAM,WAAW,WAAW,SAAS;AACrC,SAAK,oBAAoB,IAAI,mDAAyB,MAAM,SAAS;AACrE,SAAK,iBAAiB,IAAI,6CAAsB;AAAA,MAC9C,SAAS;AAAA,MACT;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI;AAAA,MACxB;AAAA,MACA,KAAK;AAAA,IACP;AAEA,+DAAiC,IAAI;AAAA,EACvC;AAAA,EAEA,sBAAsB;AACpB,eAAO,kDAAsC;AAAA,EAC/C;AAAA,EAEA,aAAa,OAAe;AAC1B,eAAO,sCAAkB,KAAK;AAAA,EAChC;AAAA,EAEA,qBAAqB;AACnB,WAAO;AAAA,EACT;AAAA,EAEA,mBAA2B;AACzB,WAAO,KAAK,UAAU,QAAQ,YAAY;AAAA,EAC5C;AAAA,EAEA,OAAO,iBAAiB;AACtB,WAAO;AAAA,EACT;AACF;",
  "names": []
}
