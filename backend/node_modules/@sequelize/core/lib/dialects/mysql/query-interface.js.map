{
  "version": 3,
  "sources": ["../../../src/dialects/mysql/query-interface.js"],
  "sourcesContent": ["'use strict';\n\nimport { getObjectFromMap } from '../../utils/object';\nimport { assertNoReservedBind, combineBinds } from '../../utils/sql';\n\nconst sequelizeErrors = require('../../errors');\nconst { AbstractQueryInterface } = require('../abstract/query-interface');\nconst { QueryTypes } = require('../../query-types');\n\n/**\n * The interface that Sequelize uses to talk with MySQL/MariaDB database\n */\nexport class MySqlQueryInterface extends AbstractQueryInterface {\n  /**\n   * A wrapper that fixes MySQL's inability to cleanly remove columns from existing tables if they have a foreign key constraint.\n   *\n   * @override\n   */\n  async removeColumn(tableName, columnName, options) {\n    const foreignKeys = await this.showConstraints(tableName, { ...options, columnName, constraintType: 'FOREIGN KEY' });\n    await Promise.all(foreignKeys.map(constraint => this.removeConstraint(tableName, constraint.constraintName, options)));\n\n    await super.removeColumn(tableName, columnName, options);\n  }\n\n  /**\n   * @override\n   */\n  async upsert(tableName, insertValues, updateValues, where, options) {\n    if (options.bind) {\n      assertNoReservedBind(options.bind);\n    }\n\n    const modelDefinition = options.model.modelDefinition;\n\n    options = { ...options };\n\n    options.type = QueryTypes.UPSERT;\n    options.updateOnDuplicate = Object.keys(updateValues);\n    options.upsertKeys = Array.from(modelDefinition.primaryKeysAttributeNames, pkAttrName => modelDefinition.getColumnName(pkAttrName));\n\n    const { query, bind } = this.queryGenerator.insertQuery(tableName, insertValues, getObjectFromMap(modelDefinition.attributes), options);\n\n    // unlike bind, replacements are handled by QueryGenerator, not QueryRaw\n    delete options.replacements;\n    options.bind = combineBinds(options.bind, bind);\n\n    return await this.sequelize.queryRaw(query, options);\n  }\n\n  /**\n   * A wrapper that fixes MySQL's lack of support for DROP CONSTRAINT in MySQL < 8.0.\n   *\n   * @override\n   */\n  // TODO [>=2023-11-01]: remove this override when MySQL 8.0 is the minimum supported version\n  async removeConstraint(tableName, constraintName, options) {\n    const queryOptions = { ...options, raw: true, constraintName };\n    const constraints = await this.showConstraints(tableName, queryOptions);\n\n    const constraint = constraints[0];\n    if (!constraint || !constraint.constraintType) {\n      throw new sequelizeErrors.UnknownConstraintError(\n        {\n          message: `Constraint ${constraintName} on table ${tableName} does not exist`,\n          constraint: constraintName,\n          table: tableName,\n        },\n      );\n    }\n\n    let query;\n    if (constraint.constraintType === 'FOREIGN KEY') {\n      query = `ALTER TABLE ${this.queryGenerator.quoteTable(tableName)} DROP FOREIGN KEY ${this.quoteIdentifier(constraint.constraintName)}`;\n    } else {\n      query = this.queryGenerator.removeIndexQuery(tableName, constraint.constraintName);\n    }\n\n    return this.sequelize.queryRaw(query, queryOptions);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAiC;AACjC,iBAAmD;AAEnD,MAAM,kBAAkB,QAAQ,cAAc;AAC9C,MAAM,EAAE,uBAAuB,IAAI,QAAQ,6BAA6B;AACxE,MAAM,EAAE,WAAW,IAAI,QAAQ,mBAAmB;AAK3C,MAAM,4BAA4B,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAM9D,MAAM,aAAa,WAAW,YAAY,SAAS;AACjD,UAAM,cAAc,MAAM,KAAK,gBAAgB,WAAW,EAAE,GAAG,SAAS,YAAY,gBAAgB,cAAc,CAAC;AACnH,UAAM,QAAQ,IAAI,YAAY,IAAI,gBAAc,KAAK,iBAAiB,WAAW,WAAW,gBAAgB,OAAO,CAAC,CAAC;AAErH,UAAM,MAAM,aAAa,WAAW,YAAY,OAAO;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,WAAW,cAAc,cAAc,OAAO,SAAS;AAClE,QAAI,QAAQ,MAAM;AAChB,2CAAqB,QAAQ,IAAI;AAAA,IACnC;AAEA,UAAM,kBAAkB,QAAQ,MAAM;AAEtC,cAAU,EAAE,GAAG,QAAQ;AAEvB,YAAQ,OAAO,WAAW;AAC1B,YAAQ,oBAAoB,OAAO,KAAK,YAAY;AACpD,YAAQ,aAAa,MAAM,KAAK,gBAAgB,2BAA2B,gBAAc,gBAAgB,cAAc,UAAU,CAAC;AAElI,UAAM,EAAE,OAAO,KAAK,IAAI,KAAK,eAAe,YAAY,WAAW,kBAAc,gCAAiB,gBAAgB,UAAU,GAAG,OAAO;AAGtI,WAAO,QAAQ;AACf,YAAQ,WAAO,yBAAa,QAAQ,MAAM,IAAI;AAE9C,WAAO,MAAM,KAAK,UAAU,SAAS,OAAO,OAAO;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,iBAAiB,WAAW,gBAAgB,SAAS;AACzD,UAAM,eAAe,EAAE,GAAG,SAAS,KAAK,MAAM,eAAe;AAC7D,UAAM,cAAc,MAAM,KAAK,gBAAgB,WAAW,YAAY;AAEtE,UAAM,aAAa,YAAY,CAAC;AAChC,QAAI,CAAC,cAAc,CAAC,WAAW,gBAAgB;AAC7C,YAAM,IAAI,gBAAgB;AAAA,QACxB;AAAA,UACE,SAAS,cAAc,2BAA2B;AAAA,UAClD,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAEA,QAAI;AACJ,QAAI,WAAW,mBAAmB,eAAe;AAC/C,cAAQ,eAAe,KAAK,eAAe,WAAW,SAAS,sBAAsB,KAAK,gBAAgB,WAAW,cAAc;AAAA,IACrI,OAAO;AACL,cAAQ,KAAK,eAAe,iBAAiB,WAAW,WAAW,cAAc;AAAA,IACnF;AAEA,WAAO,KAAK,UAAU,SAAS,OAAO,YAAY;AAAA,EACpD;AACF;",
  "names": []
}
