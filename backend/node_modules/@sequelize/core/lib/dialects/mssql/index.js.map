{
  "version": 3,
  "sources": ["../../../src/dialects/mssql/index.ts"],
  "sourcesContent": ["import type { Sequelize } from '../../sequelize.js';\nimport { createNamedParamBindCollector } from '../../utils/sql';\nimport { AbstractDialect } from '../abstract';\nimport { MsSqlConnectionManager } from './connection-manager';\nimport * as DataTypes from './data-types';\nimport { registerMsSqlDbDataTypeParsers } from './data-types.db.js';\nimport { MsSqlQueryGenerator } from './query-generator';\nimport { MsSqlQueryInterface } from './query-interface';\nimport { MsSqlQuery } from './query.js';\n\nexport class MssqlDialect extends AbstractDialect {\n  static supports = AbstractDialect.extendSupport({\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    migrations: false,\n    returnValues: 'output',\n    schemas: true,\n    multiDatabases: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false,\n    },\n    alterColumn: {\n      unique: false,\n    },\n    constraints: {\n      restrict: false,\n      default: true,\n      removeOptions: { ifExists: true },\n    },\n    index: {\n      collate: false,\n      type: true,\n      using: false,\n      where: true,\n      include: true,\n    },\n    tmpTableTrigger: true,\n    dataTypes: {\n      JSON: true,\n      // TODO: https://learn.microsoft.com/en-us/sql/t-sql/spatial-geography/spatial-types-geography?view=sql-server-ver16\n      GEOGRAPHY: false,\n      // TODO: https://learn.microsoft.com/en-us/sql/t-sql/spatial-geometry/spatial-types-geometry-transact-sql?view=sql-server-ver16\n      GEOMETRY: false,\n    },\n    jsonOperations: true,\n    jsonExtraction: {\n      unquoted: true,\n      quoted: false,\n    },\n    tableHints: true,\n    removeColumn: {\n      ifExists: true,\n    },\n  });\n\n  readonly connectionManager: MsSqlConnectionManager;\n  readonly queryGenerator: MsSqlQueryGenerator;\n  readonly queryInterface: MsSqlQueryInterface;\n  readonly Query = MsSqlQuery;\n  readonly dataTypesDocumentationUrl = 'https://msdn.microsoft.com/en-us/library/ms187752%28v=sql.110%29.aspx';\n\n  // SQL Server 2017 Express (version 14), minimum supported version, all the way\n  // up to the most recent version. When increasing this version, remember to\n  // update also the minimum version in the documentation at\n  //   https://github.com/sequelize/website/blob/main/docs/other-topics/dialect-specific-things.md\n  // and set the relevant years for the mssql Docker images in the ci.yml file at\n  //   .github/workflows/ci.yml\n  // minimum supported version\n  readonly defaultVersion = '14.0.1000';\n  readonly TICK_CHAR_LEFT = '[';\n  readonly TICK_CHAR_RIGHT = ']';\n\n  constructor(sequelize: Sequelize) {\n    super(sequelize, DataTypes, 'mssql');\n    this.connectionManager = new MsSqlConnectionManager(this, sequelize);\n    this.queryGenerator = new MsSqlQueryGenerator({\n      dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new MsSqlQueryInterface(\n      sequelize,\n      this.queryGenerator,\n    );\n\n    registerMsSqlDbDataTypeParsers(this);\n  }\n\n  createBindCollector() {\n    return createNamedParamBindCollector('@');\n  }\n\n  escapeBuffer(buffer: Buffer): string {\n    const hex = buffer.toString('hex');\n\n    return `0x${hex}`;\n  }\n\n  escapeString(value: string): string {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    value = value.replaceAll('\\'', '\\'\\'');\n\n    return `N'${value}'`;\n  }\n\n  getDefaultSchema(): string {\n    return 'dbo';\n  }\n\n  static getDefaultPort() {\n    return 1433;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAA8C;AAC9C,sBAAgC;AAChC,gCAAuC;AACvC,gBAA2B;AAC3B,2BAA+C;AAC/C,6BAAoC;AACpC,6BAAoC;AACpC,mBAA2B;AAEpB,MAAM,qBAAqB,gCAAgB;AAAA,EAChD,OAAO,WAAW,gCAAgB,cAAc;AAAA,IAC9C,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,eAAe;AAAA,MACb,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,MACT,eAAe,EAAE,UAAU,KAAK;AAAA,IAClC;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAAA,IACA,iBAAiB;AAAA,IACjB,WAAW;AAAA,MACT,MAAM;AAAA;AAAA,MAEN,WAAW;AAAA;AAAA,MAEX,UAAU;AAAA,IACZ;AAAA,IACA,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,MACd,UAAU;AAAA,MACV,QAAQ;AAAA,IACV;AAAA,IACA,YAAY;AAAA,IACZ,cAAc;AAAA,MACZ,UAAU;AAAA,IACZ;AAAA,EACF,CAAC;AAAA,EAEQ;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS5B,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAE3B,YAAY,WAAsB;AAChC,UAAM,WAAW,WAAW,OAAO;AACnC,SAAK,oBAAoB,IAAI,iDAAuB,MAAM,SAAS;AACnE,SAAK,iBAAiB,IAAI,2CAAoB;AAAA,MAC5C,SAAS;AAAA,MACT;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI;AAAA,MACxB;AAAA,MACA,KAAK;AAAA,IACP;AAEA,6DAA+B,IAAI;AAAA,EACrC;AAAA,EAEA,sBAAsB;AACpB,eAAO,0CAA8B,GAAG;AAAA,EAC1C;AAAA,EAEA,aAAa,QAAwB;AACnC,UAAM,MAAM,OAAO,SAAS,KAAK;AAEjC,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,aAAa,OAAuB;AAGlC,YAAQ,MAAM,WAAW,KAAM,IAAM;AAErC,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,mBAA2B;AACzB,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,iBAAiB;AACtB,WAAO;AAAA,EACT;AACF;",
  "names": []
}
